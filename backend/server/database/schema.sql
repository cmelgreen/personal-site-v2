CREATE TABLE post(
    id 			int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  	created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  	updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    title 		varchar(255) UNIQUE,
  	slug 		varchar(255) UNIQUE,
  	img 		varchar(255),
    summary 	varchar(255),
    category varchar(255),
    content 	text,
  	raw_content text
);

CREATE TABLE tag(
    id 		int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    value 	varchar(50) UNIQUE
);

CREATE TABLE post_tag(
    post_id int REFERENCES post (id) ON DELETE CASCADE,
    tag_id	int REFERENCES tag (id) ON DELETE CASCADE
);

CREATE VIEW post_to_tag AS
    SELECT post.slug, post.id as post_id, tag.id as tag_id, tag.value
    FROM post, post_tag, tag
    WHERE post.id = post_tag.post_id AND tag.id = post_tag.tag_id;
    
CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS '
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
' LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp
BEFORE UPDATE ON post
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();